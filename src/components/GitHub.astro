---
import { Octokit } from '@octokit/core'
import Star from '~/assets/star.svg'
import ExternalLink from './ExternalLink.astro'
import P from './P.astro'
import SubHeading from './SubHeading.astro'

const octokit = new Octokit({
  auth: import.meta.env.GH_ACCESS_KEY
})

// console.log(resp.data)

const { repo: repoSlug, role } = Astro.props

const [owner, repo] = repoSlug.split('/')

if (!owner || !repo) {
  throw new Error('Invalid repo slug')
}

const resp = await octokit.request('GET /repos/{owner}/{repo}', {
  owner,
  repo,
  headers: {
    'X-GitHub-Api-Version': '2022-11-28'
  }
})

const { full_name, html_url, description, stargazers_count, topics } = resp.data

type Props = {
  repo: `${string}/${string}`
  role: Role
}

export type Role = keyof typeof ROLES
export const ROLES = { AUTHOR: 'AUTHOR', CONTRIBUTOR: 'CONTRIBUTOR' } as const
---

<li>
  <ExternalLink href={html_url}>
    <div
      class="flex flex-col gap-4 overflow-hidden rounded-xl border border-gray-700 py-4">
      <SubHeading class="px-4">
        {full_name}
        <span
          class="ml-2 rounded-md bg-gray-300 px-2 py-0.5 text-xs text-background"
          >{role}</span
        >
      </SubHeading>
      <P class="px-4">{description}</P>
      <div class="flex items-center justify-between gap-6 pl-4">
        <div class="flex flex-shrink-0 items-center gap-2">
          <img
            src={Star.src}
            alt="GitHub repository star count icon"
            class="h-6 w-6"
            aria-hidden="true"
            width={24}
            height={24}
            loading="lazy"
            decoding="async"
          />
          <P as="span">
            {stargazers_count}
          </P>
        </div>
        {
          topics ? (
            <ul class="flex items-center gap-4 overflow-x-auto pr-4">
              {topics.map((topic, index) => (
                <li class={index > 2 ? 'sm:hidden' : ''}>
                  <div class="rounded border border-gray-700 px-2 py-1">
                    <P as="span" class="whitespace-nowrap">
                      {topic}
                    </P>
                  </div>
                </li>
              ))}
            </ul>
          ) : null
        }
      </div>
    </div>
  </ExternalLink>
</li>
