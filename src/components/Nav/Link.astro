---
import type { HTMLAttributes } from 'astro/types'

import { twMerge } from '../../util'

type Props = HTMLAttributes<'a'> & {
  label: string
}

const { class: pClass = '', label, ...props } = Astro.props

const requestUrl = new URL(Astro.request.url)
const requestUrlPathname = requestUrl.pathname.replace(/\/$/, '') || '/'

const hrefUrl = new URL(props.href || '', requestUrl)
const hrefMatchPattern = new RegExp(
  `^${hrefUrl.pathname.replace(/\//g, '\\$&')}`
)

const isActive =
  /** if the link target href matches with the request URL and the target href is not the index route (`/`) */
  (hrefMatchPattern.test(requestUrlPathname) && hrefUrl.pathname !== '/') ||
  /** if the link href and the request URL are to the index route  */
  (requestUrlPathname === '/' && hrefUrl.pathname === '/')
---

<a
  class={twMerge(
    'text-gray-100 px-4 py-2 text-xs rounded-[1.875rem] border border-gray-800 bg-gray-900 aria-[current]:bg-gray-50 aria-[current]:text-gray-900 hover:text-gray-100 hover:bg-gray-800 transition-colors duration-200 ease-in-out',
    pClass
  )}
  aria-label={`Go to ${label}`}
  {...isActive && { 'aria-current': 'page' }}
  {...props}
>
  <slot />
</a>

<script>
  document
    .querySelector('[aria-current="page"]')
    ?.scrollIntoView({ behavior: 'instant' })
</script>
