---
import type { GetStaticPaths } from 'astro'
import { SEO } from 'astro-seo'
import { getCollection, getEntry } from 'astro:content'
import CentralSpan from '../../components/CentralSpan.astro'
import Grid from '../../components/Grid.astro'
import Layout from '../../layouts/Layout.astro'
import PreClipboard from '../../layouts/pre-clipboard.astro'
import SectionContent from '../../layouts/section-content.astro'

export const getStaticPaths = (async () => {
  const allSnippets = await getCollection(
    'snippets',
    ({ data }) => data.published
  )

  return allSnippets.map((snippet) => ({
    params: {
      slug: snippet.slug
    }
  }))
}) satisfies GetStaticPaths

const { slug } = Astro.params

const snippet = await getEntry('snippets', slug)
const { Content } = await snippet.render()
---

<Layout>
  <SEO
    slot='head-meta'
    title={snippet.data.title}
    description={snippet.data.description}
    openGraph={{
      basic: {
        title: snippet.data.title,
        type: 'article',
        image: '',
        url: `${Astro.site}${Astro.url.pathname.slice(1)}`
      },
      article: {
        authors: ['Girish Kumar'],
        tags: snippet.data.tags,
        section: 'Technology & Computing',
        modifiedTime: `${new Date(
          snippet.data.updatedAt as unknown as string
        ).toISOString()}`
      }
    }}
    twitter={{
      creator: '@girishk21',
      title: snippet.data.title,
      description: snippet.data.description,
      site: `${Astro.site}${Astro.url.pathname.slice(1)}`,
      card: 'summary'
    }}
  />
  <Grid as='main' class='isolate'>
    <CentralSpan as='section' class='flex flex-col gap-8 pt-32'>
      <article
        class='prose prose-invert prose-pre:normal-case [&_:not(:where(pre,pre_*,:has(>_pre)))]:lowercase [&_:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"]_*))]:relative [&_:where(blockquote[data-type=note]):not(:where([class~="not-prose"],[class~="not-prose"]_*))]:border-l-blue-600 [&_:where(blockquote[data-type=warn]):not(:where([class~="not-prose"],[class~="not-prose"]_*))]:border-l-amber-400'
      >
        <SectionContent
          description={snippet.data.description}
          title={snippet.data.title}
        >
          <PreClipboard>
            <Content />
          </PreClipboard>
        </SectionContent>
      </article>
    </CentralSpan>
  </Grid>
</Layout>
